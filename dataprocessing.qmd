---
title: "Carga y procesamiento de textos"
format: html
editor: visual
---

## üì¶Preparando los paquetes

Antes de comenzar el an√°lisis es obligatorio instalar dos paquetes b√°sicos: `quanteda` y `readtext` a trav√©s del comando: `installed.packages(")` . En primer lugar, para poder instalar `quanteda` , as√≠ como cualquier otro paquete en R, deberemos de de introducir en la consola el comando:

```{r}
installed.packages("quanteda")
```

La misma f√≥rmula aplicaremos para el paquete `readtext`

```{r}
installed.packages("readtext")
```

#### ¬øPor qu√© lo usamos?

-   `quanteda` es la herramienta que nos va a proporcionar los recursos para hacer un an√°lisis cuantitativo de un texto, incluyendo la tokenizaci√≥n^\[1\]^, la creaci√≥n de matrices de t√©rminos y el an√°lisis de frecuencia.

-   `readtext` se utiliza para cargar y leer datos textuales desde diferentes formatos (como archivos de texto, documentos de Word, etc.). Para evitar dolores de cabeza, nosotros recomendamos que el material que se vaya a trabajar est√© en un formato plano .txt. Los formatos anteriores pueden dar problemas por la forma en que se estructuran los datos y los elementos adicionales que suelen contener, lo que requiere aplicar procesos adicionales de limpieza que puede alargar nuestro an√°lisis.

**¬øSab√≠as qu√©...?** Ô∏èü§ì‚òù

::: {.tip style="background-color: #A8E6A1; border-left: 5px solid #A8E6A1; padding: 10px"}
^~\[1\]~^ En `quanteda` hablamos de **tokenizaci√≥n** para referirnos a la unidad m√≠nima de trabajo.

Imaginate que tienes la siguiente oraci√≥n:

"Hola, ¬øc√≥mo est√°s?"

La tokenizaci√≥n de esta frase podr√≠a dar como resultado los siguientes tokens: "Hola", "¬ø", "c√≥mo", "est√°s", "?"
:::

## ü§ñüí¨ Volcando los archivos de texto a RStudio

Vamos a vincular el archivo de¬†texto en la aplicaci√≥n de RStudios. Para ello vamos a aplicar los dos paquetes que hemos instalado anteriormente¬†con el comando `library("name")`

```{r}
library("quanteda")
library("readtext")
```

Es importante resaltar que si no llamamos antes el paquete los comandos que introduzcamos despu√©s no funcionar√°n o nos dar√°n error.

Una vez cargados, el programa estar√° listo para leer nuestro archivo de texto. La formula que vamos a escribir para decirle a `quanteda` que archivo analizar ser√° el siguiente:

```{r}
data_char_NALVANY <- as.character(readtext::readtext("C:/Users/sergi/Desktop/NALVANY.txt"
))
names(data_char_NALVANY) <- "NALVANY"
```

#### ¬øPor qu√© lo usamos?

Vamos a desgranar este prompt para que pueda entenderse m√°s facil:

-   `data_char_"TEXTO"`: La variable data_char_NALVANY es un objeto^\[2\]^ en R que almacena el texto como una cadena de caracteres (character vector).

-   `as.character()`: Convierte el objeto cargado en un formato de texto sencillo, que es m√°s f√°cil de manejar para el an√°lisis.

-   `names(data_char_NALVANY) <- "Nalvany"`: Asigna un nombre al objeto que contiene el texto, facilitando su identificaci√≥n en futuros an√°lisis.

**¬øSab√≠as qu√©...?** Ô∏èü§ì‚òù

::: {.tip style="background-color: #A8E6A1; border-left: 5px solid #A8E6A1; padding: 10px"}
^~\[2\]~^ En `r` hablamos de **objetos** para referirnos a contenedores donde almacenar datos e informaci√≥n. En el caso anterior, el objeto `data_char_NALVANY` almacena el texto plano que vamos a utilizar.

Existen distintos objetos con diferentes datos almacenados. A lo largo de este caso pr√°ctico trabajaremos con ellos para gestionar m√°s facilmente el an√°lisis cuantitativo.
:::
